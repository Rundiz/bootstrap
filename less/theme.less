// stylelint-disable selector-no-qualifying-type, selector-max-compound-selectors

/*!
 * Bootstrap v3.4.1 (https://getbootstrap.com/)
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/v3-dev/LICENSE)
 */

//
// Load core variables and mixins
// --------------------------------------------------

@import "variables.less";
@import "mixins.less";


//
// Buttons
// --------------------------------------------------

// Common styles
.btn-default,
.btn-primary,
.btn-success,
.btn-info,
.btn-warning,
.btn-danger {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .2);
  @shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 1px rgba(0, 0, 0, .075);
  .box-shadow(@shadow);

  // Reset the shadow
  &:active,
  &.active {
    .box-shadow(inset 0 3px 5px rgba(0, 0, 0, .125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    .box-shadow(none);
  }

  .badge {
    text-shadow: none;
  }
}

// Mixin for generating new styles
.btn-styles(@btn-color: #555) {
  #gradient > .vertical(@start-color: @btn-color; @end-color: hsl(from @btn-color h s calc(l - 12)));
  background-repeat: repeat-x;
  border-color: hsl(from @btn-color h s calc(l - 14));

  &:hover,
  &:focus  {
    background-color: hsl(from @btn-color h s calc(l - 12));
    background-position: 0 -15px;
  }

  &:active,
  &.active {
    background-color: hsl(from @btn-color h s calc(l - 12));
    border-color: hsl(from @btn-color h s calc(l - 14));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: hsl(from @btn-color h s calc(l - 12));
      background-image: none;
    }
  }
}

// Common styles
.btn {
  // Remove the gradient for the pressed/active state
  &:active,
  &.active {
    background-image: none;
  }
}

// Apply the mixin to the buttons
.btn-default {
  .btn-styles(var(--bs-btn-default-bg));
  text-shadow: 0 1px 0 #fff;
  border-color: #ccc;
}
.btn-primary { .btn-styles(var(--bs-btn-primary-bg)); }
.btn-success { .btn-styles(var(--bs-btn-success-bg)); }
.btn-info    { .btn-styles(var(--bs-btn-info-bg)); }
.btn-warning { .btn-styles(var(--bs-btn-warning-bg)); }
.btn-danger  { .btn-styles(var(--bs-btn-danger-bg)); }


//
// Images
// --------------------------------------------------

.thumbnail,
.img-thumbnail {
  .box-shadow(0 1px 2px rgba(0, 0, 0, .075));
}


//
// Dropdowns
// --------------------------------------------------

.dropdown-menu > li > a:hover,
.dropdown-menu > li > a:focus {
  #gradient > .vertical(@start-color: var(--bs-dropdown-link-hover-bg); @end-color: hsl(from var(--bs-dropdown-link-hover-bg) h s calc( - 5)));
  background-color: hsl(from var(--bs-dropdown-link-hover-bg) h s calc(l - 5));
}
.dropdown-menu > .active > a,
.dropdown-menu > .active > a:hover,
.dropdown-menu > .active > a:focus {
  #gradient > .vertical(@start-color: var(--bs-dropdown-link-active-bg); @end-color: hsl(from var(--bs-dropdown-link-active-bg) h s calc( - 5)));
  background-color: hsl(from var(--bs-dropdown-link-active-bg) h s calc(l - 5));
}


//
// Navbar
// --------------------------------------------------

// Default navbar
.navbar-default {
  #gradient > .vertical(@start-color: ~"hsl(from var(--bs-navbar-default-bg) h s calc(l + 10))"; @end-color: var(--bs-navbar-default-bg));
  border-radius: var(--bs-navbar-border-radius);
  @shadow: inset 0 1px 0 rgba(255, 255, 255, .15), 0 1px 5px rgba(0, 0, 0, .075);
  .box-shadow(@shadow);

  .navbar-nav > .open > a,
  .navbar-nav > .active > a {
    #gradient > .vertical(@start-color: hsl(from var(--bs-navbar-default-link-active-bg) h s calc(l - 5)); @end-color: hsl(from var(--bs-navbar-default-link-active-bg) h s calc(l - 2)));
    .box-shadow(inset 0 3px 9px rgba(0, 0, 0, .075));
  }
}
.navbar-brand,
.navbar-nav > li > a {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .25);
}

// Inverted navbar
.navbar-inverse {
  #gradient > .vertical(@start-color: ~"hsl(from var(--bs-navbar-inverse-bg) h s calc(l + 10))"; @end-color: var(--bs-navbar-inverse-bg));
  border-radius: var(--bs-navbar-border-radius);
  .navbar-nav > .open > a,
  .navbar-nav > .active > a {
    #gradient > .vertical(@start-color: var(--bs-navbar-inverse-link-active-bg); @end-color: ~"hsl(from var(--bs-navbar-inverse-link-active-bg) h s calc(l + 2.5))");
    .box-shadow(inset 0 3px 9px rgba(0, 0, 0, .25));
  }

  .navbar-brand,
  .navbar-nav > li > a {
    text-shadow: 0 -1px 0 rgba(0, 0, 0, .25);
  }
}

// Undo rounded corners in static and fixed navbars
.navbar-static-top,
.navbar-fixed-top,
.navbar-fixed-bottom {
  border-radius: 0;
}

// Fix active state of dropdown items in collapsed mode
@media (max-width: @grid-float-breakpoint-max) {
  .navbar .navbar-nav .open .dropdown-menu > .active > a {
    &,
    &:hover,
    &:focus {
      color: #fff;
      #gradient > .vertical(@start-color: var(--bs-dropdown-link-active-bg); @end-color: hsl(from var(--bs-dropdown-link-active-bg) h s calc(l - 5)));
    }
  }
}


//
// Alerts
// --------------------------------------------------

// Common styles
.alert {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .2);
  @shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
  .box-shadow(@shadow);
}

// Mixin for generating new styles
.alert-styles(@color) {
  #gradient > .vertical(@start-color: @color; @end-color: hsl(from @color h s calc(l - 7.5)));
  border-color: hsl(from @color h s calc(l - 15));
}

// Apply the mixin to the alerts
.alert-success    { .alert-styles(var(--bs-alert-success-bg)); }
.alert-info       { .alert-styles(var(--bs-alert-info-bg)); }
.alert-warning    { .alert-styles(var(--bs-alert-warning-bg)); }
.alert-danger     { .alert-styles(var(--bs-alert-danger-bg)); }


//
// Progress bars
// --------------------------------------------------

// Give the progress background some depth
.progress {
  #gradient > .vertical(@start-color: hsl(from var(--bs-progress-bg) h s calc(l - 4)); @end-color: var(--bs-progress-bg));
}

// Mixin for generating new styles
.progress-bar-styles(@color) {
  #gradient > .vertical(@start-color: @color; @end-color: hsl(from @color h s calc(l - 10)));
}

// Apply the mixin to the progress bars
.progress-bar            { .progress-bar-styles(var(--bs-progress-bar-bg)); }
.progress-bar-success    { .progress-bar-styles(var(--bs-progress-bar-success-bg)); }
.progress-bar-info       { .progress-bar-styles(var(--bs-progress-bar-info-bg)); }
.progress-bar-warning    { .progress-bar-styles(var(--bs-progress-bar-warning-bg)); }
.progress-bar-danger     { .progress-bar-styles(var(--bs-progress-bar-danger-bg)); }

// Reset the striped class because our mixins don't do multiple gradients and
// the above custom styles override the new `.progress-bar-striped` in v3.2.0.
.progress-bar-striped {
  #gradient > .striped();
}


//
// List groups
// --------------------------------------------------

.list-group {
  border-radius: var(--bs-border-radius-base);
  .box-shadow(0 1px 2px rgba(0, 0, 0, .075));
}
.list-group-item.active,
.list-group-item.active:hover,
.list-group-item.active:focus {
  text-shadow: 0 -1px 0 hsl(from var(--bs-list-group-active-bg) h s calc(l - 10));
  #gradient > .vertical(@start-color: var(--bs-list-group-active-bg); @end-color: hsl(from var(--bs-list-group-active-bg) h s calc(l - 7.5)));
  border-color: hsl(from var(--bs-list-group-active-border) h s calc(l - 7.5));

  .badge {
    text-shadow: none;
  }
}


//
// Panels
// --------------------------------------------------

// Common styles
.panel {
  .box-shadow(0 1px 2px rgba(0, 0, 0, .05));
}

// Mixin for generating new styles
.panel-heading-styles(@color) {
  #gradient > .vertical(@start-color: @color; @end-color: hsl(from @color h s calc(l - 5)));
}

// Apply the mixin to the panel headings only
.panel-default > .panel-heading   { .panel-heading-styles(var(--bs-panel-default-heading-bg)); }
.panel-primary > .panel-heading   { .panel-heading-styles(var(--bs-panel-primary-heading-bg)); }
.panel-success > .panel-heading   { .panel-heading-styles(var(--bs-panel-success-heading-bg)); }
.panel-info > .panel-heading      { .panel-heading-styles(var(--bs-panel-info-heading-bg)); }
.panel-warning > .panel-heading   { .panel-heading-styles(var(--bs-panel-warning-heading-bg)); }
.panel-danger > .panel-heading    { .panel-heading-styles(var(--bs-panel-danger-heading-bg)); }


//
// Wells
// --------------------------------------------------

.well {
  #gradient > .vertical(@start-color: hsl(from var(--bs-well-bg) h s calc(l - 5)); @end-color: var(--bs-well-bg));
  border-color: hsl(from var(--bs-well-bg) h s calc(l - 10));
  @shadow: inset 0 1px 3px rgba(0, 0, 0, .05), 0 1px 0 rgba(255, 255, 255, .1);
  .box-shadow(@shadow);
}
