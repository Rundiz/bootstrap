// stylelint-disable selector-max-type, selector-max-compound-selectors, selector-max-combinators, no-duplicate-selectors

//
// Panels
// --------------------------------------------------


// Base class
.panel {
  margin-bottom: var(--bs-line-height-computed);
  background-color: var(--bs-panel-bg);
  border: 1px solid transparent;
  border-radius: var(--bs-panel-border-radius);
  .box-shadow(0 1px 1px rgba(0, 0, 0, .05));
}

// Panel contents
.panel-body {
  padding: var(--bs-panel-body-padding);
  &:extend(.clearfix all);
}

// Optional heading
.panel-heading {
  padding: var(--bs-panel-heading-padding);
  border-bottom: 1px solid transparent;
  .border-top-radius(calc(var(--bs-panel-border-radius) - 1px));

  > .dropdown .dropdown-toggle {
    color: inherit;
  }
}

// Within heading, strip any `h*` tag of its default margins for spacing.
.panel-title {
  margin-top: 0;
  margin-bottom: 0;
  font-size: ~"round(up, calc(var(--bs-font-size-base) * 1.125), 1px)";
  color: inherit;

  > a,
  > small,
  > .small,
  > small > a,
  > .small > a {
    color: inherit;
  }
}

// Optional footer (stays gray in every modifier class)
.panel-footer {
  padding: var(--bs-panel-footer-padding);
  background-color: var(--bs-panel-footer-bg);
  border-top: 1px solid var(--bs-panel-inner-border);
  .border-bottom-radius(calc(var(--bs-panel-border-radius) - 1px));
}


// List groups in panels
//
// By default, space out list group content from panel headings to account for
// any kind of custom content between the two.

.panel {
  > .list-group,
  > .panel-collapse > .list-group {
    margin-bottom: 0;

    .list-group-item {
      border-width: 1px 0;
      border-radius: 0;
    }

    // Add border top radius for first one
    &:first-child {
      .list-group-item:first-child {
        border-top: 0;
        .border-top-radius(calc(var(--bs-panel-border-radius) - 1px));
      }
    }

    // Add border bottom radius for last one
    &:last-child {
      .list-group-item:last-child {
        border-bottom: 0;
        .border-bottom-radius(calc(var(--bs-panel-border-radius) - 1px));
      }
    }
  }
  > .panel-heading + .panel-collapse > .list-group {
    .list-group-item:first-child {
      .border-top-radius(0);
    }
  }
}
// Collapse space between when there's no additional content.
.panel-heading + .list-group {
  .list-group-item:first-child {
    border-top-width: 0;
  }
}
.list-group + .panel-footer {
  border-top-width: 0;
}

// Tables in panels
//
// Place a non-bordered `.table` within a panel (not within a `.panel-body`) and
// watch it go full width.

.panel {
  > .table,
  > .table-responsive > .table,
  > .panel-collapse > .table {
    margin-bottom: 0;

    caption {
      padding-right: var(--bs-panel-body-padding);
      padding-left: var(--bs-panel-body-padding);
    }
  }
  // Add border top radius for first one
  > .table:first-child,
  > .table-responsive:first-child > .table:first-child {
    .border-top-radius(calc(var(--bs-panel-border-radius) - 1px));

    > thead:first-child,
    > tbody:first-child {
      > tr:first-child {
        border-top-left-radius: calc(var(--bs-panel-border-radius) - 1px);
        border-top-right-radius: calc(var(--bs-panel-border-radius) - 1px);

        td:first-child,
        th:first-child {
          border-top-left-radius: calc(var(--bs-panel-border-radius) - 1px);
        }
        td:last-child,
        th:last-child {
          border-top-right-radius: calc(var(--bs-panel-border-radius) - 1px);
        }
      }
    }
  }
  // Add border bottom radius for last one
  > .table:last-child,
  > .table-responsive:last-child > .table:last-child {
    .border-bottom-radius(calc(var(--bs-panel-border-radius) - 1px));

    > tbody:last-child,
    > tfoot:last-child {
      > tr:last-child {
        border-bottom-right-radius: calc(var(--bs-panel-border-radius) - 1px);
        border-bottom-left-radius: calc(var(--bs-panel-border-radius) - 1px);

        td:first-child,
        th:first-child {
          border-bottom-left-radius: calc(var(--bs-panel-border-radius) - 1px);
        }
        td:last-child,
        th:last-child {
          border-bottom-right-radius: calc(var(--bs-panel-border-radius) - 1px);
        }
      }
    }
  }
  > .panel-body + .table,
  > .panel-body + .table-responsive,
  > .table + .panel-body,
  > .table-responsive + .panel-body {
    border-top: 1px solid var(--bs-table-border-color);
  }
  > .table > tbody:first-child > tr:first-child th,
  > .table > tbody:first-child > tr:first-child td {
    border-top: 0;
  }
  > .table-bordered,
  > .table-responsive > .table-bordered {
    border: 0;
    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th:first-child,
        > td:first-child {
          border-left: 0;
        }
        > th:last-child,
        > td:last-child {
          border-right: 0;
        }
      }
    }
    > thead,
    > tbody {
      > tr:first-child {
        > td,
        > th {
          border-bottom: 0;
        }
      }
    }
    > tbody,
    > tfoot {
      > tr:last-child {
        > td,
        > th {
          border-bottom: 0;
        }
      }
    }
  }
  > .table-responsive {
    margin-bottom: 0;
    border: 0;
  }
}


// Collapsible panels (aka, accordion)
//
// Wrap a series of panels in `.panel-group` to turn them into an accordion with
// the help of our collapse JavaScript plugin.

.panel-group {
  margin-bottom: var(--bs-line-height-computed);

  // Tighten up margin so it's only between panels
  .panel {
    margin-bottom: 0;
    border-radius: var(--bs-panel-border-radius);

    + .panel {
      margin-top: 5px;
    }
  }

  .panel-heading {
    border-bottom: 0;

    + .panel-collapse > .panel-body,
    + .panel-collapse > .list-group {
      border-top: 1px solid var(--bs-panel-inner-border);
    }
  }

  .panel-footer {
    border-top: 0;
    + .panel-collapse .panel-body {
      border-bottom: 1px solid var(--bs-panel-inner-border);
    }
  }
}


// Contextual variations
.panel-default {
  .panel-variant(var(--bs-panel-default-border); var(--bs-panel-default-text); var(--bs-panel-default-heading-bg); var(--bs-panel-default-border));
}
.panel-primary {
  .panel-variant(var(--bs-panel-primary-border); var(--bs-panel-primary-text); var(--bs-panel-primary-heading-bg); var(--bs-panel-primary-border));
}
.panel-success {
  .panel-variant(var(--bs-panel-success-border); var(--bs-panel-success-text); var(--bs-panel-success-heading-bg); var(--bs-panel-success-border));
}
.panel-info {
  .panel-variant(var(--bs-panel-info-border); var(--bs-panel-info-text); var(--bs-panel-info-heading-bg); var(--bs-panel-info-border));
}
.panel-warning {
  .panel-variant(var(--bs-panel-warning-border); var(--bs-panel-warning-text); var(--bs-panel-warning-heading-bg); var(--bs-panel-warning-border));
}
.panel-danger {
  .panel-variant(var(--bs-panel-danger-border); var(--bs-panel-danger-text); var(--bs-panel-danger-heading-bg); var(--bs-panel-danger-border));
}
